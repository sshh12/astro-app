generator pyclient {
  provider                    = "prisma-client-py"
  recursive_type_depth        = 5
  enable_experimental_decimal = true
}

datasource db {
  provider = "cockroachdb"
  url      = env("DATABASE_URL")
}

model User {
  id        BigInt   @id @default(autoincrement())
  name      String   @unique
  apiKey    String
  createdAt DateTime @default(now())
  timezone  String
  lat       Decimal?
  lon       Decimal?
  elevation Decimal?

  lists   ListsOnUsers[]
  objects SpaceObjectsOnUsers[]
}

enum SpaceObjectType {
  SOLAR_SYSTEM_OBJECT
  STAR_OBJECT
}

enum Color {
  SLATE
  GRAY
  ZINC
  NEUTRAL
  STONE
  RED
  ORANGE
  AMBER
  YELLOW
  LIME
  GREEN
  EMERALD
  TEAL
  CYAN
  SKY
  BLUE
  INDIGO
  VIOLET
  PURPLE
  FUCHSIA
  PINK
  ROSE
}

model SpaceObject {
  id        BigInt   @id @default(autoincrement())
  name      String   @unique
  names     String[]
  searchKey String
  createdAt DateTime @default(now())

  ra                Decimal?
  dec               Decimal?
  solarSystemKey    String?
  type              SpaceObjectType
  simbadName        String?
  color             Color           @default(SLATE)
  description       String?         @db.String(2000)
  descriptionCredit String?
  imgURL            String?
  imgCredit         String?

  lists SpaceObjectsOnLists[]
  users SpaceObjectsOnUsers[]
}

model List {
  id             BigInt  @id @default(autoincrement())
  title          String
  commonTemplate Boolean @default(false) // deprecated
  publicTemplate Boolean @default(false)
  imgURL         String?
  credit         String?

  color Color @default(SLATE)

  users   ListsOnUsers[]
  objects SpaceObjectsOnLists[]
}

model ListsOnUsers {
  listId  BigInt
  userId  BigInt
  User    User    @relation(fields: [userId], references: [id])
  List    List    @relation(fields: [listId], references: [id])
  canEdit Boolean @default(false)

  @@id([listId, userId])
}

model SpaceObjectsOnLists {
  listId        BigInt
  spaceObjectId BigInt
  List          List        @relation(fields: [listId], references: [id])
  SpaceObject   SpaceObject @relation(fields: [spaceObjectId], references: [id])

  @@id([listId, spaceObjectId])
}

model SpaceObjectsOnUsers {
  userId        BigInt
  spaceObjectId BigInt
  User          User        @relation(fields: [userId], references: [id])
  SpaceObject   SpaceObject @relation(fields: [spaceObjectId], references: [id])
  nickname      String?
  color         Color       @default(SLATE)

  @@id([userId, spaceObjectId])
}
