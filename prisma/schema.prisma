generator pyclient {
  provider                    = "prisma-client-py"
  recursive_type_depth        = 5
  enable_experimental_decimal = true
}

datasource db {
  provider = "cockroachdb"
  url      = env("DATABASE_URL")
}

model User {
  id        BigInt   @id @default(autoincrement())
  name      String   @unique
  apiKey    String
  createdAt DateTime @default(now())

  lists     ListsOnUsers[]
  objects   SpaceObjectsOnUsers[]
  equipment Equipment[]
  location  Location[]
  images    Image[]
}

enum SpaceObjectType {
  SOLAR_SYSTEM_OBJECT
  STAR_OBJECT
  COMET
  EARTH_SATELLITE
}

enum Color {
  SLATE
  GRAY
  ZINC
  NEUTRAL
  STONE
  RED
  ORANGE
  AMBER
  YELLOW
  LIME
  GREEN
  EMERALD
  TEAL
  CYAN
  SKY
  BLUE
  INDIGO
  VIOLET
  PURPLE
  FUCHSIA
  PINK
  ROSE
}

enum EquipmentType {
  VISUAL
  CAMERA
  BINOCULARS
}

enum ListType {
  PERSONAL_COLLECTION
  CURATED_LIST
  PUBLIC_LIST
  CONSTELLATION_GROUP
}

model SpaceObject {
  id        BigInt   @id @default(autoincrement())
  name      String   @unique
  names     String[]
  searchKey String
  createdAt DateTime @default(now())

  ra        Decimal?
  dec       Decimal?
  fluxV     Decimal?
  sizeMajor Decimal?
  sizeMinor Decimal?
  sizeAngle Decimal?

  solarSystemKey String?
  cometKey       String?
  celestrakKey   String?
  simbadName     String?
  type           SpaceObjectType

  color             Color   @default(SLATE)
  description       String? @db.String(2000)
  descriptionCredit String?
  imgURL            String?
  imgCredit         String?

  lists SpaceObjectsOnLists[]
  users SpaceObjectsOnUsers[]
}

model List {
  id             BigInt   @id @default(autoincrement())
  title          String
  publicTemplate Boolean  @default(false)
  type           ListType @default(PERSONAL_COLLECTION)
  imgURL         String?
  credit         String?

  color Color @default(SLATE)

  users   ListsOnUsers[]
  objects SpaceObjectsOnLists[]
}

model Equipment {
  id     BigInt        @id @default(autoincrement())
  type   EquipmentType
  active Boolean       @default(false)

  teleFocalLength   Decimal?
  teleAperture      Decimal?
  teleName          String?
  camWidth          Int?
  camHeight         Int?
  camPixelWidth     Decimal?
  camPixelHeight    Decimal?
  camName           String?
  barlow            Decimal?
  binning           Int?
  eyeFocalLength    Decimal?
  eyeFOV            Decimal?
  eyeName           String?
  binoAperture      Decimal?
  binoMagnification Decimal?
  binoActualFOV     Decimal?
  binoName          String?

  createdAt DateTime @default(now())
  User      User?    @relation(fields: [userId], references: [id])
  userId    BigInt?
}

model Location {
  id        BigInt  @id @default(autoincrement())
  active    Boolean @default(false)
  name      String
  lat       Decimal
  lon       Decimal
  elevation Decimal
  timezone  String

  createdAt DateTime @default(now())
  User      User?    @relation(fields: [userId], references: [id])
  userId    BigInt?
}

model ListsOnUsers {
  listId  BigInt
  userId  BigInt
  User    User    @relation(fields: [userId], references: [id])
  List    List    @relation(fields: [listId], references: [id])
  canEdit Boolean @default(false)

  @@id([listId, userId])
}

model SpaceObjectsOnLists {
  listId        BigInt
  spaceObjectId BigInt
  List          List        @relation(fields: [listId], references: [id])
  SpaceObject   SpaceObject @relation(fields: [spaceObjectId], references: [id])

  @@id([listId, spaceObjectId])
}

model SpaceObjectsOnUsers {
  userId        BigInt
  spaceObjectId BigInt
  User          User        @relation(fields: [userId], references: [id])
  SpaceObject   SpaceObject @relation(fields: [spaceObjectId], references: [id])
  nickname      String?
  color         Color       @default(SLATE)

  @@id([userId, spaceObjectId])
}

enum AstrometryStatus {
  PENDING
  DONE
  ERROR
}

model Image {
  id BigInt @id @default(autoincrement())

  astrometrySid               BigInt
  astrometryJobId             BigInt?
  astrometryJobCalibrationsId BigInt?
  astrometryStatus            AstrometryStatus
  ra                          Decimal?
  dec                         Decimal?
  widthArcSec                 Decimal?
  heightArcSec                Decimal?
  radius                      Decimal?
  pixelScale                  Decimal?
  orientation                 Decimal?
  parity                      Decimal?
  objsInField                 String?

  title       String
  mainImageId String

  createdAt DateTime @default(now())
  User      User?    @relation(fields: [userId], references: [id])
  userId    BigInt?
}
